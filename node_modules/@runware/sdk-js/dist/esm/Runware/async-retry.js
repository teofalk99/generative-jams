"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.asyncRetry = void 0;
const utils_1 = require("./utils");
const asyncRetry = async (apiCall, options = {}) => {
    var _a;
    const { delayInSeconds = 1, callback } = options;
    let maxRetries = (_a = options.maxRetries) !== null && _a !== void 0 ? _a : 1;
    while (maxRetries) {
        try {
            const result = await apiCall();
            return result; // Return the result if successful
        }
        catch (error) {
            callback === null || callback === void 0 ? void 0 : callback();
            maxRetries--;
            if (maxRetries > 0) {
                await (0, utils_1.delay)(delayInSeconds); // Delay before the next retry
                await (0, exports.asyncRetry)(apiCall, Object.assign(Object.assign({}, options), { maxRetries }));
            }
            else {
                throw error; // Throw the error if max retries are reached
            }
        }
    }
};
exports.asyncRetry = asyncRetry;
